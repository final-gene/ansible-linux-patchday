---
- name: ensure no packages will prevent the distribution update
  block:
    - name: check for damaged packages
      register: _dpkg_audit
      changed_when: false
      failed_when: false
      environment:
        LANGUAGE: en
        LANG: en_US.UTF-8
      ansible.builtin.command:
        cmd: dpkg --audit

    - name: check for hold packages
      register: _dpkg_hold
      changed_when: false
      failed_when: false
      environment:
        LANGUAGE: en
        LANG: en_US.UTF-8
      ansible.builtin.shell:
        cmd: dpkg --get-selections | grep hold

    - name: check dpkg audit and hold log
      when: >
        _dpkg_audit.stdout | length != 0
        or
        _dpkg_hold.stdout | length != 0
      block:
        - name: dpkg audit result
          when: _dpkg_audit.stdout | length != 0
          ansible.builtin.pause:
            seconds: 1
            prompt: |
              {{ _dpkg_audit.stdout }}

        - name: hold packages
          when: _dpkg_hold.stdout | length != 0
          ansible.builtin.pause:
            seconds: 1
            prompt: |
              {{ _dpkg_hold.stdout }}

        - name: cancel distribution update
          ansible.builtin.fail:
            msg: |
              distribution update aborted due to blocking packages

- name: prepare sources.list files for distribution update
  ansible.builtin.include_tasks: patch_files.yml
  vars:
    _from_release: "{{ ansible_distribution_release }}"
    _to_release: "{{ linux_patchday_distro_release }}"

- name: ensure enough disk space is available for distribution update
  block:
    - name: get necessary disk space # noqa command-instead-of-module
      register: _space_needed
      changed_when: false
      failed_when: _space_needed.stdout | length == 0
      environment:
        LANGUAGE: en
        LANG: en_US.UTF-8
      ansible.builtin.shell:
        cmd: >
          apt-get update >/dev/null &&
          apt-get -o APT::Get::Trivial-Only=true dist-upgrade 2>/dev/null |
          grep 'additional disk space' |
          cut -d ' ' -f 4,5 |
          sed 's/ \(.\).*/\U\1/g' |
          numfmt --from=auto

    - name: get available disk space on root patition
      ansible.builtin.set_fact:
        _space_available: >-
          {{ ansible_mounts | community.general.json_query('[?mount==`' ~ linux_patchday_root_fs_mount | default('/') ~ '`].size_available') | first }}

    - name: check disk space
      ansible.builtin.assert:
        that:
          - _space_available | int > _space_needed.stdout | int
        success_msg: disk space check successful
        fail_msg: >-
          Distribution update aborted due to insufficent disk space on root partition
          ({{ _space_available }} bytes available, 0 bytes necessary)

- name: perform upgrade for distribution update
  ansible.builtin.include_tasks: upgrade.yml
